{"version":3,"sources":["to-do-icon.png","navBar/NavBar.js","apiConfig.js","todos/api.js","todos/components/NewTodoItem.js","about/About.js","todos/components/TodoItem.js","todos/components/Todos.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","styles","root","flexGrow","grow","menuButton","marginLeft","marginRight","link","float","color","NavBar","react_default","a","createElement","style","AppBar_default","position","Toolbar_default","src","require","alt","width","paddingRight","Typography_default","variant","react_router_dom","className","to","apiUrls","apiUrl","window","location","hostname","updateCompleted","id","todo","fetch","method","headers","Content-Type","body","JSON","stringify","completed","createTodo","name","renameTodo","newName","NewTodoItem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","_e$target","target","value","setState","defineProperty","handleSubmit","preventDefault","onCreateTodo","state","then","res","json","data","setTodos","todos","concat","toConsumableArray","form","onSubmit","type","required","nameInput","placeholder","onChange","flex","Component","border","padding","display","marginBottom","textAlign","About","Fragment","TodoItem","onUpdateCompleted","item","response","map","_id","onRenameTodo","flash","pasteAsPlainText","event","text","clipboardData","getData","document","execCommand","disableNewlines","keyCode","which","returnValue","modifiedVal","replace","toggleEditable","editable","handleDoneBtnClick","handleCancelClick","oldName","_this2","updatedTodos","filter","deleteTodo","todoStyles","backgroundColor","textDecoration","minWidth","btnStyle","background","fontSize","cursor","fontWeight","justifyContent","classes","TableRow_default","classNames","customTableStyle","hover","TableCell_default","align","checkboxCol","checked","bind","react_contenteditable_default","html","disabled","onPaste","onKeyPress","tagName","btnCol","onClick","onDeleteTodo","withStyles","&:nth-of-type(odd)","Todos","onGetTodos","prevProps","_this$props","todosComponent","components_TodoItem","key","Paper_default","tableWrapper","Table_default","table","TableHead_default","TableBody_default","theme","overflowX","App","message","flashMessage","flashType","clearTimeout","messageTimeout","setTimeout","_this$state","basename","navBar_NavBar","react_router","exact","path","render","components_NewTodoItem","components_Todos","component","Boolean","match","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cafa61fb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/to-do-icon.a92de81b.png\";","import React from 'react'\nimport {Link} from 'react-router-dom'\n// import PropTypes from 'prop-types';\n// import { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n// import Button from '@material-ui/core/Button';\n// import IconButton from '@material-ui/core/IconButton';\n// import MenuIcon from '@material-ui/icons/Menu';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  link: {\n    float: 'right',\n    marginRight: 30,\n    color: 'white'\n  }\n};\n\nconst NavBar = () => {\n  return(\n    <div style={styles.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n        <img src={require('../to-do-icon.png')} alt='app-logo' style={{width:'58px', marginLeft:'1vw', paddingRight:'14px'}} />\n          <Typography variant=\"h6\" color=\"inherit\" style={styles.grow}>\n            On Track\n          </Typography>\n\n          <Link className='material-icons' style={styles.link} to='/'>home</Link>\n          <Link className='material-icons' style={styles.link} to='/about'>info</Link>\n        </Toolbar>\n      </AppBar>\n    </div>\n  )\n}\n\nexport default NavBar\n","let apiUrl\nconst apiUrls = {\n  production: 'https://on-track-api.herokuapp.com',\n  development: 'http://localhost:8000'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\n\nexport default apiUrl\n","import apiUrl from '../apiConfig'\n\n\nexport const updateCompleted = (id,todo) => {\n  return fetch(apiUrl + '/todos/' + id, {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      completed: !todo.completed\n    })\n  })\n}\n\nexport const getTodos = () => {\n  return fetch(apiUrl + '/todos', {\n    headers: {\n      'Content-Type': 'application/json',\n    }\n  })\n}\n\nexport const getTodo = (id) => {\n  return fetch(apiUrl + '/todos/' + id, {\n    headers: {\n      'Content-Type': 'application/json',\n    }\n  })\n}\n\nexport const deleteTodo  = (id) => {\n  return  fetch(apiUrl + '/todos/' + id, {\n            method: 'DELETE',\n            headers: {\n              'Content-Type': 'application/json',\n            }\n          })\n}\n\nexport const createTodo = name => {\n  return fetch(apiUrl + '/todos/', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      name,\n      completed: false\n    })\n  })\n}\n\nexport const renameTodo = (id, newName) => {\n  return fetch(apiUrl + '/todos/' + id, {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      name: newName\n    })\n  })\n}\n","import React, { Component } from 'react'\nimport {createTodo} from '../api'\n\nclass NewTodoItem extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      name: '',\n      todos: []\n    }\n  }\n\n  static getDerivedStateFromProps(props, state){\n     if(props.todos!==state.todos){\n       return { todos: props.todos};\n    }\n    else return null;\n  }\n\n  handleChange = (e) => {\n    const {name,value} = e.target\n    this.setState({[name]: value})\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.onCreateTodo(this.state.name)\n    // clear state\n    this.setState({name: ''})\n  }\n\n  onCreateTodo = (name) => {\n    if (name) {\n      createTodo(name)\n     .then(res => res.json())\n     .then(data => {\n       this.props.setTodos({ todos: [...this.state.todos, data]})\n     })\n    }\n }\n\n  render() {\n    return (\n      <div>\n        <form style={styles.form} onSubmit={this.handleSubmit}>\n          <input\n            type='text'\n            name='name'\n            required\n            value={this.state.name}\n            style={styles.nameInput}\n            placeholder='Add item'\n            onChange={this.handleChange}\n          />\n\n          <input\n            type='submit'\n            value='add_circle'\n            className='btn material-icons'\n            style={{flex:'1'}}\n          />\n        </form>\n      </div>\n    )\n  }\n}\n\nconst styles = {\n  nameInput: {\n    border: '1px solid black',\n    flex: '36',\n    padding: '10px'\n  },\n  form: {\n    display: 'flex',\n    marginBottom: 20\n  }\n}\n\nexport default NewTodoItem\n","import React from 'react'\n\nconst styles = {\n  textAlign: 'center'\n}\n\nfunction About() {\n  return (\n    <React.Fragment>\n      <h2 style={styles}>A to-do app built using react.</h2>\n    </React.Fragment>\n  )\n}\n\nexport default About\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport ContentEditable from \"react-contenteditable\";\nimport {updateCompleted, deleteTodo, renameTodo} from '../api'\n\n// import Table from '@material-ui/core/Table';\n// import TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\n// import TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport { withStyles } from '@material-ui/styles';\nimport classNames from 'classnames';\n\nconst tableStyles =  {\n  customTableStyle: {\n    backgroundColor: '#d9e4f29e',\n    // row: {\n      '&:nth-of-type(odd)': {\n          backgroundColor:'#dae4f2',\n        },\n        // }\n  },\n  btnCol: {\n    width: '1%'\n  },\n  checkboxCol: {\n    width: '1%'\n  },\n}\n\nclass TodoItem extends Component {\n  constructor(props) {\n  super(props);\n    this.state = {\n      editable: false ,\n      name: props.item.name,\n      todo: props.item,\n      todos: [],\n    };\n    this.id = this.props.item._id\n  }\n\n  static getDerivedStateFromProps(props, state){\n     if(props.todos!==state.todos){\n       return { todos: props.todos};\n    }\n    else return null;\n  }\n\n  onUpdateCompleted = (id,item) => {\n    updateCompleted(id,item)\n    .then(response => response.json())\n    .then(res=> {\n      this.setState({ todos: this.state.todos.map(todo => {\n        if(todo._id === id) {\n          todo.completed = res.completed\n        }\n        return todo;\n      }) });\n    })\n  }\n\n   onDeleteTodo(id){\n    const updatedTodos = [...this.state.todos.filter(todo => todo._id !== id)]\n    deleteTodo(id)\n    .then(() => {\n      this.props.setTodos({todos: updatedTodos});\n    })\n  }\n\n  onRenameTodo = (id,newName) => {\n    if(newName) {\n      renameTodo(id, newName)\n    } else {\n      return this.flash('Name Required', 'flash-error')\n    }\n  }\n\n  pasteAsPlainText = event => {\n    event.preventDefault()\n\n    const text = event.clipboardData.getData('text/plain')\n    document.execCommand('insertHTML', false, text)\n  }\n\n  disableNewlines = event => {\n    const keyCode = event.keyCode || event.which\n\n    if (keyCode === 13) {\n      event.returnValue = false\n      if (event.preventDefault) event.preventDefault()\n    }\n  }\n\n  handleChange = (e) => {\n    // Handling ContentEditable component issue with special character\n    const trimSpaces = string => {\n      return string\n        .replace(/&nbsp;/g, '')\n        .replace(/&amp;/g, '&')\n        .replace(/&gt;/g, '>')\n        .replace(/&lt;/g, '<')\n        .replace(/<br>/g, '')\n    }\n    const {value} = e.target\n    let modifiedVal\n    if(value) {\n       modifiedVal = trimSpaces(value)\n    } else {\n      modifiedVal = ''\n    }\n    this.setState({name: modifiedVal})\n  }\n\n  toggleEditable = () => {\n    this.setState({editable: !this.state.editable})\n  }\n\n  handleDoneBtnClick = () => {\n    const {flash} = this.props\n    if (this.state.name) {\n      this.toggleEditable()\n      this.onRenameTodo(this.id, this.state.name)\n    } else {\n      return flash('Name Required', 'flash-error')\n    }\n\n  }\n  handleCancelClick = () => {\n    const oldName = this.state.todo.name\n    this.setState({name:oldName})\n    this.toggleEditable()\n  }\n\n  render() {\n\n    const todoStyles = {\n      backgroundColor: this.state.editable ? 'lightyellow' : null,\n      textDecoration: this.state.todo.completed ? 'line-through' : 'none',\n      minWidth: 10,\n      display: 'inline-block'\n    }\n\n    const btnStyle = {\n      background: 'rgba(0, 0, 0, 0)',\n      // color: 'lightred',\n      border: 'none',\n      fontSize: 25,\n      // padding: '0px 1px',\n      // float: 'right',\n      cursor: 'pointer',\n      fontWeight: 900,\n      justifyContent:'flex-end'\n    }\n\n    const _id = this.props.item._id\n    const {editable} = this.state\n    const { classes } = this.props;\n    return (\n      <TableRow className={classNames(classes.customTableStyle)} hover>\n        <TableCell padding=\"checkbox\" align='center'  className={classes.checkboxCol}>\n        <input\n        type='checkbox'\n        checked={this.props.item.completed}\n        onChange={this.onUpdateCompleted.bind(this,_id,this.props.item)}\n        />\n        </TableCell>\n        <TableCell align='left'padding='none'>\n          <ContentEditable\n          html={this.state.name} // innerHTML of the editable div\n          disabled={!this.state.editable} // use true to disable edition\n          onChange={this.handleChange} // handle innerHTML change\n          onPaste={this.pasteAsPlainText}\n          onKeyPress={this.disableNewlines}\n          tagName='span'\n          style={todoStyles}\n          />\n        </TableCell>\n\n        { !editable ?\n          <React.Fragment>\n            <TableCell align='center' padding='none'className={classes.btnCol}>\n              <button\n                style={btnStyle}\n                className=\"material-icons\"\n                onClick={this.toggleEditable}>edit\n              </button>\n            </TableCell>\n            <TableCell align='center' padding='none'className={classes.btnCol}>\n              <button\n              style={btnStyle}\n              className=\"material-icons\"\n              onClick={this.onDeleteTodo.bind(this, this.id)}> delete\n              </button>\n            </TableCell>\n          </React.Fragment>\n          :\n          <React.Fragment>\n            <TableCell align='center' padding='none'className={classes.btnCol}>\n              <button\n              style={btnStyle}\n              type='submit'\n              className=\"material-icons\"\n              onClick={this.handleDoneBtnClick}>done\n              </button>\n            </TableCell>\n            <TableCell align='center' padding='none'className={classes.btnCol}>\n              <button\n              style={btnStyle}\n              className=\"material-icons\"\n              onClick={this.handleCancelClick}>cancel\n              </button>\n            </TableCell>\n          </React.Fragment>\n        }\n      </TableRow>\n    )\n  }\n}\n\nTodoItem.propTypes = {\n  item: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(tableStyles)(TodoItem);\n// export default TodoItem\n","import React , {Component} from 'react'\nimport TodoItem from './TodoItem'\nimport {getTodos} from '../api'\n// import { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\n// import TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\n// import TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\n// import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\n\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    // marginTop: theme.spacing.unit * 3,\n  },\n  table: {\n    // minWidth: 50,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n});\n\nclass Todos extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      todos: props.todos\n    }\n  }\n\n  async onGetTodos() {\n     await getTodos()\n     .then(res => {\n       return res.json()\n     })\n     .then(data => {\n       this.setState({todos: data})\n     })\n  }\n\n  async componentDidMount() {\n    await this.onGetTodos()\n   this.props.setTodos({todos: this.state.todos})\n  }\n\n\ncomponentDidUpdate(prevProps) {\n  if (this.props.todos !== prevProps.todos) {\n    this.setState({todos: this.props.todos})\n  }\n}\n\n  render() {\n\n    const {flash, setTodos} = this.props\n    const {todos} = this.state\n    const { classes } = this.props;\n    const todosComponent = todos.map(item => {\n      return <TodoItem\n        key={item._id}\n        item={item}\n        flash={flash}\n        todos={todos}\n        setTodos={setTodos}\n        />\n      })\n\n    return (\n      <Paper className={classes.root}>\n        <div className={classes.tableWrapper}>\n        <Table className={classes.table}>\n          <TableHead>\n          </TableHead>\n          <TableBody>\n            {todosComponent}\n          </TableBody>\n        </Table>\n        </div>\n      </Paper>\n    )\n  }\n}\n\nTodos.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Todos);\n","import React, { Component } from 'react';\nimport {BrowserRouter as Router, Route } from 'react-router-dom'\nimport './App.css';\n// import TodoItem from './todos/components/TodoItem'\nimport NavBar from './navBar/NavBar'\nimport NewTodoItem from './todos/components/NewTodoItem'\nimport About from './about/About'\n// import {updateCompleted, getTodos, deleteTodo, createTodo, renameTodo} from './todos/api'\nimport Todos from './todos/components/Todos'\n\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      todos: [],\n      flashMessage: '',\n      flashType: null,\n    }\n  }\n\n  setTodos = todos => {\n    this.setState(todos)\n  }\n\n  flash = (message, type) => {\n    this.setState({flashMessage: message, flashType: type})\n    clearTimeout(this.messageTimeout)\n    this.messageTimeout = setTimeout(() => this.setState({flashMessage: null}),2000)\n  }\n\n  render() {\n    const {flashMessage, flashType, todos} = this.state\n    return (\n      <Router basename='/on-track'>\n            <NavBar/>\n            <div className='container'>\n              {flashMessage && <h3 className={flashType}>{flashMessage}</h3>}\n                <Route exact path='/' render={props => (\n                  <React.Fragment>\n                    <NewTodoItem setTodos={this.setTodos} todos={todos}/>\n                    <div className='todo-list'>\n                    <Todos\n                    flash={this.flash}\n                    setTodos={this.setTodos}\n                    todos={todos}\n                    />\n                    </div>\n                  </React.Fragment>\n                )}/>\n              <Route path='/about' component={About}/>\n          </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}