{"version":3,"sources":["to-do-icon.png","navBar/NavBar.js","apiConfig.js","todos/api.js","todos/components/NewTodoItem.js","about/About.js","todos/components/TodoItem.js","todos/components/Todos.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","styles","root","flexGrow","grow","menuButton","marginLeft","marginRight","link","float","color","NavBar","react_default","a","createElement","style","AppBar_default","position","Toolbar_default","src","require","alt","width","paddingRight","Typography_default","variant","react_router_dom","className","to","apiUrls","apiUrl","window","location","hostname","updateCompleted","id","item","fetch","method","headers","Content-Type","body","JSON","stringify","completed","createTodo","name","renameTodo","newName","NewTodoItem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","_e$target","target","value","setState","defineProperty","handleSubmit","preventDefault","onCreateTodo","state","then","res","json","data","setTodos","todos","concat","toConsumableArray","display","onSubmit","type","required","flex","padding","placeholder","onChange","Component","textAlign","About","Fragment","TodoItem","onUpdateCompleted","response","map","todo","_id","onRenameTodo","flash","pasteAsPlainText","event","text","clipboardData","getData","document","execCommand","disableNewlines","keyCode","which","returnValue","modifiedVal","replace","toggleEditable","editable","handleDoneBtnClick","handleCancelClick","oldName","getStyles","background","borderBottom","textDecoration","renderBtns","btnStyle","onClick","onDeleteTodo","bind","assertThisInitialized","_this2","updatedTodos","filter","deleteTodo","checked","react_contenteditable_default","html","disabled","onPaste","onKeyPress","tagName","backgroundColor","border","fontSize","cursor","fontWeight","justifyContent","Todos","onGetTodos","prevProps","_this$props","todosComponent","components_TodoItem","key","App","message","flashMessage","flashType","clearTimeout","messageTimeout","setTimeout","_this$state","basename","navBar_NavBar","react_router","exact","path","render","components_NewTodoItem","components_Todos","component","Boolean","match","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c69172e9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/to-do-icon.a92de81b.png\";","import React from 'react'\nimport {Link} from 'react-router-dom'\n// import PropTypes from 'prop-types';\n// import { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n// import Button from '@material-ui/core/Button';\n// import IconButton from '@material-ui/core/IconButton';\n// import MenuIcon from '@material-ui/icons/Menu';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  link: {\n    float: 'right',\n    marginRight: 30,\n    color: 'white'\n  }\n};\n\nconst NavBar = () => {\n  return(\n    <div style={styles.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n        <img src={require('../to-do-icon.png')} alt='app-logo' style={{width:'58px', marginLeft:'1vw', paddingRight:'14px'}} />\n          <Typography variant=\"h6\" color=\"inherit\" style={styles.grow}>\n            On Track\n          </Typography>\n\n          <Link className='material-icons' style={styles.link} to='/'>home</Link>\n          <Link className='material-icons' style={styles.link} to='/about'>info</Link>\n        </Toolbar>\n      </AppBar>\n    </div>\n  )\n}\n\nexport default NavBar\n","let apiUrl\nconst apiUrls = {\n  production: 'https://on-track-api.herokuapp.com',\n  development: 'http://localhost:8000'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\n\nexport default apiUrl\n","import apiUrl from '../apiConfig'\n\n\nexport const updateCompleted = (id,item) => {\n  return fetch(apiUrl + '/items/' + id, {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      completed: !item.completed\n    })\n  })\n}\n\nexport const getTodos = () => {\n  return fetch(apiUrl + '/items', {\n    headers: {\n      'Content-Type': 'application/json',\n    }\n  })\n}\n\nexport const getTodo = (id) => {\n  return fetch(apiUrl + '/items/' + id, {\n    headers: {\n      'Content-Type': 'application/json',\n    }\n  })\n}\n\nexport const deleteTodo  = (id) => {\n  return  fetch(apiUrl + '/items/' + id, {\n            method: 'DELETE',\n            headers: {\n              'Content-Type': 'application/json',\n            }\n          })\n}\n\nexport const createTodo = name => {\n  return fetch(apiUrl + '/items/', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      name,\n      completed: false\n    })\n  })\n}\n\nexport const renameTodo = (id, newName) => {\n  return fetch(apiUrl + '/items/' + id, {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      name: newName\n    })\n  })\n}\n","import React, { Component } from 'react'\nimport {createTodo} from '../api'\n\nclass NewTodoItem extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      name: '',\n      todos: []\n    }\n  }\n\n  static getDerivedStateFromProps(props, state){\n     if(props.todos!==state.todos){\n       return { todos: props.todos};\n    }\n    else return null;\n  }\n\n  handleChange = (e) => {\n    const {name,value} = e.target\n    this.setState({[name]: value})\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.onCreateTodo(this.state.name)\n    // clear state\n    this.setState({name: ''})\n  }\n\n  onCreateTodo = (name) => {\n    if (name) {\n      createTodo(name)\n     .then(res => res.json())\n     .then(data => {\n       this.props.setTodos({ todos: [...this.state.todos, data]})\n     })\n    }\n }\n\n  render() {\n    return (\n      <div>\n        <form style={{display: 'flex'}} onSubmit={this.handleSubmit}>\n          <input\n            type='text'\n            name='name'\n            required\n            value={this.state.name}\n            style={{flex: '36', padding: '10px'}}\n            placeholder='Add item'\n            onChange={this.handleChange}\n          />\n\n          <input\n            type='submit'\n            value='add_circle'\n            className='btn material-icons'\n            style={{flex:'1'}}\n          />\n        </form>\n      </div>\n    )\n  }\n\n}\n\nexport default NewTodoItem\n","import React from 'react'\n\nconst styles = {\n  textAlign: 'center'\n}\n\nfunction About() {\n  return (\n    <React.Fragment>\n      <h2 style={styles}>A to-do app built using react.</h2>\n    </React.Fragment>\n  )\n}\n\nexport default About\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport ContentEditable from \"react-contenteditable\";\nimport {updateCompleted, deleteTodo, renameTodo} from '../api'\n\nclass TodoItem extends Component {\n  constructor(props) {\n  super(props);\n    this.state = {\n      editable: false ,\n      name: props.item.name,\n      todo: props.item,\n      todos: []\n    };\n    this.id = this.props.item._id\n  }\n\n  static getDerivedStateFromProps(props, state){\n     if(props.todos!==state.todos){\n       return { todos: props.todos};\n    }\n    else return null;\n  }\n\n  onUpdateCompleted = (id,item) => {\n    updateCompleted(id,item)\n    .then(response => response.json())\n    .then(res=> {\n      this.setState({ todos: this.state.todos.map(todo => {\n        if(todo._id === id) {\n          todo.completed = res.completed\n        }\n        return todo;\n      }) });\n    })\n  }\n\n   onDeleteTodo(id){\n    const updatedTodos = [...this.state.todos.filter(todo => todo._id !== id)]\n    deleteTodo(id)\n    .then(() => {\n      this.props.setTodos({todos: updatedTodos});\n    })\n  }\n\n  onRenameTodo = (id,newName) => {\n    if(newName) {\n      renameTodo(id, newName)\n    } else {\n      return this.flash('Name Required', 'flash-error')\n    }\n  }\n\n  pasteAsPlainText = event => {\n  event.preventDefault()\n\n  const text = event.clipboardData.getData('text/plain')\n  document.execCommand('insertHTML', false, text)\n}\n\ndisableNewlines = event => {\n  const keyCode = event.keyCode || event.which\n\n  if (keyCode === 13) {\n    event.returnValue = false\n    if (event.preventDefault) event.preventDefault()\n  }\n}\n\n  handleChange = (e) => {\n    // Handling ContentEditable component issue with special character\n    const trimSpaces = string => {\n      return string\n        .replace(/&nbsp;/g, '')\n        .replace(/&amp;/g, '&')\n        .replace(/&gt;/g, '>')\n        .replace(/&lt;/g, '<')\n        .replace(/<br>/g, '')\n    }\n    const {value} = e.target\n    let modifiedVal\n    if(value) {\n       modifiedVal = trimSpaces(value)\n    } else {\n      modifiedVal = ''\n    }\n    this.setState({name: modifiedVal})\n  }\n\n  toggleEditable = () => {\n    this.setState({editable: !this.state.editable})\n  }\n\n  handleDoneBtnClick = () => {\n    const {flash} = this.props\n    if (this.state.name) {\n      this.toggleEditable()\n      this.onRenameTodo(this.id, this.state.name)\n    } else {\n      return flash('Name Required', 'flash-error')\n    }\n\n  }\n  handleCancelClick = () => {\n    const oldName = this.state.todo.name\n    this.setState({name:oldName})\n    this.toggleEditable()\n  }\n\n\n  getStyles = () => {\n    return {\n      background: '#3f51b530',\n      padding: '10px',\n      borderBottom: '1px white solid',\n      // fontStyle: 'italic',\n      // color: 'grey',\n      textDecoration: this.props.item.completed ? 'line-through' : 'none'\n    }\n  }\n\nrenderBtns = () => {\n  const {editable} = this.state\n\n  if (!editable) {\n    return (\n      <React.Fragment>\n        <button\n        style={btnStyle}\n        className=\"material-icons\"\n        onClick={this.onDeleteTodo.bind(this, this.id)}>\n        delete\n        </button>\n\n        <button\n          style={btnStyle}\n          className=\"material-icons\"\n          onClick={this.toggleEditable}>edit\n        </button>\n      </React.Fragment>\n  )\n  } else {\n\n    return (\n      <React.Fragment>\n      <button\n      style={btnStyle}\n      className=\"material-icons\"\n      onClick={this.handleCancelClick}>cancel\n      </button>\n\n      <button\n      style={btnStyle}\n      type='submit'\n      className=\"material-icons\"\n      onClick={this.handleDoneBtnClick}>done\n      </button>\n      </React.Fragment>\n    )\n  }\n}\n\n\n  render() {\n    const _id = this.props.item._id\n    return (\n      <div style={this.getStyles()}>\n\n        <input\n          type='checkbox'\n          checked={this.props.item.completed}\n          onChange={this.onUpdateCompleted.bind(this,_id,this.props.item)}\n        />&nbsp;&nbsp;\n        <ContentEditable\n            html={this.state.name} // innerHTML of the editable div\n            disabled={!this.state.editable} // use true to disable edition\n            onChange={this.handleChange} // handle innerHTML change\n            onPaste={this.pasteAsPlainText}\n            onKeyPress={this.disableNewlines}\n            tagName='span'\n            className='todo-item-name'\n            style={this.state.editable ? styles.editable : null }\n        />\n        {this.renderBtns()}\n      </div>\n    )\n  }\n}\n\nTodoItem.propTypes = {\n  item: PropTypes.object.isRequired,\n}\n\nconst styles = {\n  editable: {\n    backgroundColor: 'lightyellow'\n  },\n}\n\nconst btnStyle = {\n  background: 'rgba(0, 0, 0, 0)',\n  // color: 'lightred',\n  border: 'none',\n  fontSize: 25,\n  padding: '0px 1px',\n  float: 'right',\n  cursor: 'pointer',\n  fontWeight: 900,\n  justifyContent:'flex-end'\n}\n\nexport default TodoItem\n","import React , {Component} from 'react'\nimport TodoItem from './TodoItem'\nimport {getTodos} from '../api'\n\n\nclass Todos extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      todos: props.todos\n    }\n  }\n\n  async onGetTodos() {\n     await getTodos()\n     .then(res => {\n       return res.json()\n     })\n     .then(data => {\n       this.setState({todos: data})\n     })\n  }\n\n  async componentDidMount() {\n    await this.onGetTodos()\n   this.props.setTodos({todos: this.state.todos})\n  }\n\n\ncomponentDidUpdate(prevProps) {\n  if (this.props.todos !== prevProps.todos) {\n    this.setState({todos: this.props.todos})\n  }\n}\n\n  render() {\n    const {flash, setTodos} = this.props\n    const {todos} = this.state\n    const todosComponent = todos.map(item => {\n    return <TodoItem\n      key={item._id}\n      item={item}\n      flash={flash}\n      todos={todos}\n      setTodos={setTodos}\n      />\n    })\n\n    return (\n      <React.Fragment>\n      {todosComponent}\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Todos\n","import React, { Component } from 'react';\nimport {BrowserRouter as Router, Route } from 'react-router-dom'\nimport './App.css';\n// import TodoItem from './todos/components/TodoItem'\nimport NavBar from './navBar/NavBar'\nimport NewTodoItem from './todos/components/NewTodoItem'\nimport About from './about/About'\n// import {updateCompleted, getTodos, deleteTodo, createTodo, renameTodo} from './todos/api'\nimport Todos from './todos/components/Todos'\n\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      todos: [],\n      flashMessage: '',\n      flashType: null,\n    }\n  }\n\n  setTodos = todos => {\n    this.setState(todos)\n  }\n\n  flash = (message, type) => {\n    this.setState({flashMessage: message, flashType: type})\n    clearTimeout(this.messageTimeout)\n    this.messageTimeout = setTimeout(() => this.setState({flashMessage: null}),2000)\n  }\n\n  render() {\n    const {flashMessage, flashType, todos} = this.state\n    return (\n      <Router basename='/on-track'>\n            <NavBar/>\n            <div className='container'>\n              {flashMessage && <h3 className={flashType}>{flashMessage}</h3>}\n                <Route exact path='/' render={props => (\n                  <React.Fragment>\n                    <NewTodoItem setTodos={this.setTodos} todos={todos}/>\n                    <div className='todo-list'>\n                    <Todos\n                    flash={this.flash}\n                    setTodos={this.setTodos}\n                    todos={todos}\n                    />\n                    </div>\n                  </React.Fragment>\n                )}/>\n              <Route path='/about' component={About}/>\n          </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}